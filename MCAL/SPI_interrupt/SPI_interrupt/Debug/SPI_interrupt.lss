
SPI_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000b62  00000bf6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080006c  0080006c  00000c02  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fbd  00000000  00000000  00000da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004ca  00000000  00000000  00001d61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000083f  00000000  00000000  0000222b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  00002a6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000030c  00000000  00000000  00002cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c92  00000000  00000000  00002fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003c72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 af 02 	jmp	0x55e	; 0x55e <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e6       	ldi	r30, 0x62	; 98
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 82 02 	call	0x504	; 0x504 <main>
  8a:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_vdInit>:
			return (PINC & (1<<pin))?1:0;
		case 'D':
			return (PIND & (1<<pin))?1:0;
	}
	return 0;
}
  92:	9f ef       	ldi	r25, 0xFF	; 255
  94:	94 bb       	out	0x14, r25	; 20
  96:	15 ba       	out	0x15, r1	; 21
  98:	80 ef       	ldi	r24, 0xF0	; 240
  9a:	8a bb       	out	0x1a, r24	; 26
  9c:	1b ba       	out	0x1b, r1	; 27
  9e:	87 b3       	in	r24, 0x17	; 23
  a0:	83 60       	ori	r24, 0x03	; 3
  a2:	87 bb       	out	0x17, r24	; 23
  a4:	91 bb       	out	0x11, r25	; 17
  a6:	12 ba       	out	0x12, r1	; 18
  a8:	08 95       	ret

000000aa <DIO_u8ReadPort>:

unsigned char DIO_u8ReadPort(unsigned char port){
	switch(port){
  aa:	82 34       	cpi	r24, 0x42	; 66
  ac:	59 f0       	breq	.+22     	; 0xc4 <DIO_u8ReadPort+0x1a>
  ae:	18 f4       	brcc	.+6      	; 0xb6 <DIO_u8ReadPort+0xc>
  b0:	81 34       	cpi	r24, 0x41	; 65
  b2:	31 f0       	breq	.+12     	; 0xc0 <DIO_u8ReadPort+0x16>
  b4:	0d c0       	rjmp	.+26     	; 0xd0 <DIO_u8ReadPort+0x26>
  b6:	83 34       	cpi	r24, 0x43	; 67
  b8:	39 f0       	breq	.+14     	; 0xc8 <DIO_u8ReadPort+0x1e>
  ba:	84 34       	cpi	r24, 0x44	; 68
  bc:	39 f0       	breq	.+14     	; 0xcc <DIO_u8ReadPort+0x22>
  be:	08 c0       	rjmp	.+16     	; 0xd0 <DIO_u8ReadPort+0x26>
		case 'A':
		return (PINA);
  c0:	89 b3       	in	r24, 0x19	; 25
  c2:	08 95       	ret
		case 'B':
		return (PINB);
  c4:	86 b3       	in	r24, 0x16	; 22
  c6:	08 95       	ret
		case 'C':
		return (PINC);
  c8:	83 b3       	in	r24, 0x13	; 19
  ca:	08 95       	ret
		case 'D':
		return (PIND);
  cc:	80 b3       	in	r24, 0x10	; 16
  ce:	08 95       	ret
	}
	return 0;
  d0:	80 e0       	ldi	r24, 0x00	; 0
}
  d2:	08 95       	ret

000000d4 <DIO_vdWritePin>:

void DIO_vdWritePin(unsigned char data,unsigned char port,unsigned char pin){
	switch(port){
  d4:	62 34       	cpi	r22, 0x42	; 66
  d6:	19 f1       	breq	.+70     	; 0x11e <DIO_vdWritePin+0x4a>
  d8:	18 f4       	brcc	.+6      	; 0xe0 <DIO_vdWritePin+0xc>
  da:	61 34       	cpi	r22, 0x41	; 65
  dc:	39 f0       	breq	.+14     	; 0xec <DIO_vdWritePin+0x18>
  de:	08 95       	ret
  e0:	63 34       	cpi	r22, 0x43	; 67
  e2:	b1 f1       	breq	.+108    	; 0x150 <DIO_vdWritePin+0x7c>
  e4:	64 34       	cpi	r22, 0x44	; 68
  e6:	09 f4       	brne	.+2      	; 0xea <DIO_vdWritePin+0x16>
  e8:	4c c0       	rjmp	.+152    	; 0x182 <DIO_vdWritePin+0xae>
  ea:	08 95       	ret
		case 'A':
			if(data){
  ec:	88 23       	and	r24, r24
  ee:	59 f0       	breq	.+22     	; 0x106 <DIO_vdWritePin+0x32>
				PORTA |= (1<<pin); 
  f0:	2b b3       	in	r18, 0x1b	; 27
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_vdWritePin+0x28>
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	4a 95       	dec	r20
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_vdWritePin+0x24>
 100:	82 2b       	or	r24, r18
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
			}else{
				PORTA &= ~(1<<pin);
 106:	2b b3       	in	r18, 0x1b	; 27
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_vdWritePin+0x3e>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	4a 95       	dec	r20
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_vdWritePin+0x3a>
 116:	80 95       	com	r24
 118:	82 23       	and	r24, r18
 11a:	8b bb       	out	0x1b, r24	; 27
 11c:	08 95       	ret
			}
			break;
		case 'B':
			if(data){
 11e:	88 23       	and	r24, r24
 120:	59 f0       	breq	.+22     	; 0x138 <DIO_vdWritePin+0x64>
				PORTB |= (1<<pin);
 122:	28 b3       	in	r18, 0x18	; 24
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_vdWritePin+0x5a>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	4a 95       	dec	r20
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_vdWritePin+0x56>
 132:	82 2b       	or	r24, r18
 134:	88 bb       	out	0x18, r24	; 24
 136:	08 95       	ret
				}else{
				PORTB &= ~(1<<pin);
 138:	28 b3       	in	r18, 0x18	; 24
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_vdWritePin+0x70>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	4a 95       	dec	r20
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_vdWritePin+0x6c>
 148:	80 95       	com	r24
 14a:	82 23       	and	r24, r18
 14c:	88 bb       	out	0x18, r24	; 24
 14e:	08 95       	ret
			}
			break;
		case 'C':
			if(data){
 150:	88 23       	and	r24, r24
 152:	59 f0       	breq	.+22     	; 0x16a <DIO_vdWritePin+0x96>
				PORTC |= (1<<pin);
 154:	25 b3       	in	r18, 0x15	; 21
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_vdWritePin+0x8c>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	4a 95       	dec	r20
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_vdWritePin+0x88>
 164:	82 2b       	or	r24, r18
 166:	85 bb       	out	0x15, r24	; 21
 168:	08 95       	ret
				}else{
				PORTC &= ~(1<<pin);
 16a:	25 b3       	in	r18, 0x15	; 21
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <DIO_vdWritePin+0xa2>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	4a 95       	dec	r20
 178:	e2 f7       	brpl	.-8      	; 0x172 <DIO_vdWritePin+0x9e>
 17a:	80 95       	com	r24
 17c:	82 23       	and	r24, r18
 17e:	85 bb       	out	0x15, r24	; 21
 180:	08 95       	ret
			}
			break;
		case 'D':
			if(data){
 182:	88 23       	and	r24, r24
 184:	59 f0       	breq	.+22     	; 0x19c <DIO_vdWritePin+0xc8>
				PORTD |= (1<<pin);
 186:	22 b3       	in	r18, 0x12	; 18
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_vdWritePin+0xbe>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	4a 95       	dec	r20
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_vdWritePin+0xba>
 196:	82 2b       	or	r24, r18
 198:	82 bb       	out	0x12, r24	; 18
 19a:	08 95       	ret
				}else{
				PORTD &= ~(1<<pin);
 19c:	22 b3       	in	r18, 0x12	; 18
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_vdWritePin+0xd4>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	4a 95       	dec	r20
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_vdWritePin+0xd0>
 1ac:	80 95       	com	r24
 1ae:	82 23       	and	r24, r18
 1b0:	82 bb       	out	0x12, r24	; 18
 1b2:	08 95       	ret

000001b4 <DIO_vdWritePort>:
			break;
	}
}

void DIO_vdWritePort(unsigned char data,unsigned char port){
	switch(port){
 1b4:	62 34       	cpi	r22, 0x42	; 66
 1b6:	79 f0       	breq	.+30     	; 0x1d6 <DIO_vdWritePort+0x22>
 1b8:	18 f4       	brcc	.+6      	; 0x1c0 <DIO_vdWritePort+0xc>
 1ba:	61 34       	cpi	r22, 0x41	; 65
 1bc:	31 f0       	breq	.+12     	; 0x1ca <DIO_vdWritePort+0x16>
 1be:	08 95       	ret
 1c0:	63 34       	cpi	r22, 0x43	; 67
 1c2:	79 f0       	breq	.+30     	; 0x1e2 <DIO_vdWritePort+0x2e>
 1c4:	64 34       	cpi	r22, 0x44	; 68
 1c6:	99 f0       	breq	.+38     	; 0x1ee <DIO_vdWritePort+0x3a>
 1c8:	08 95       	ret
		case 'A':
			if(data){
 1ca:	88 23       	and	r24, r24
 1cc:	11 f0       	breq	.+4      	; 0x1d2 <DIO_vdWritePort+0x1e>
				PORTA = data;
 1ce:	8b bb       	out	0x1b, r24	; 27
 1d0:	08 95       	ret
			}else{
				PORTA = 0;
 1d2:	1b ba       	out	0x1b, r1	; 27
 1d4:	08 95       	ret
			}
			break;
		case 'B':
			if(data){
 1d6:	88 23       	and	r24, r24
 1d8:	11 f0       	breq	.+4      	; 0x1de <DIO_vdWritePort+0x2a>
				PORTB = data;
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
			}else{
				PORTB = 0;
 1de:	18 ba       	out	0x18, r1	; 24
 1e0:	08 95       	ret
			}
			break;
		case 'C':
			if(data){
 1e2:	88 23       	and	r24, r24
 1e4:	11 f0       	breq	.+4      	; 0x1ea <DIO_vdWritePort+0x36>
				PORTC = data;
 1e6:	85 bb       	out	0x15, r24	; 21
 1e8:	08 95       	ret
			}else{
				PORTC = 0;
 1ea:	15 ba       	out	0x15, r1	; 21
 1ec:	08 95       	ret
			}
			break;
		case 'D':
			if(data){
 1ee:	88 23       	and	r24, r24
 1f0:	11 f0       	breq	.+4      	; 0x1f6 <DIO_vdWritePort+0x42>
				PORTD = data;
 1f2:	82 bb       	out	0x12, r24	; 18
 1f4:	08 95       	ret
			}else{
				PORTD = 0;
 1f6:	12 ba       	out	0x12, r1	; 18
 1f8:	08 95       	ret

000001fa <LCD_vdSendCom>:
{
	for (int i=0;ptr[i]!='\0';i++)
	{
		LCD_vdWriteChar(ptr[i]);
	}
}
 1fa:	cf 93       	push	r28
 1fc:	c8 2f       	mov	r28, r24
 1fe:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__data_end>
 202:	99 23       	and	r25, r25
 204:	19 f0       	breq	.+6      	; 0x20c <LCD_vdSendCom+0x12>
 206:	91 30       	cpi	r25, 0x01	; 1
 208:	31 f1       	breq	.+76     	; 0x256 <LCD_vdSendCom+0x5c>
 20a:	71 c0       	rjmp	.+226    	; 0x2ee <LCD_vdSendCom+0xf4>
 20c:	40 e0       	ldi	r20, 0x00	; 0
 20e:	62 e4       	ldi	r22, 0x42	; 66
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 216:	61 e4       	ldi	r22, 0x41	; 65
 218:	8c 2f       	mov	r24, r28
 21a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 21e:	41 e0       	ldi	r20, 0x01	; 1
 220:	62 e4       	ldi	r22, 0x42	; 66
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 228:	40 e0       	ldi	r20, 0x00	; 0
 22a:	62 e4       	ldi	r22, 0x42	; 66
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 232:	8f ec       	ldi	r24, 0xCF	; 207
 234:	97 e0       	ldi	r25, 0x07	; 7
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <LCD_vdSendCom+0x3c>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <LCD_vdSendCom+0x42>
 23c:	00 00       	nop
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	62 e4       	ldi	r22, 0x42	; 66
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 248:	8f ed       	ldi	r24, 0xDF	; 223
 24a:	9e e2       	ldi	r25, 0x2E	; 46
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <LCD_vdSendCom+0x52>
 250:	00 c0       	rjmp	.+0      	; 0x252 <LCD_vdSendCom+0x58>
 252:	00 00       	nop
 254:	4c c0       	rjmp	.+152    	; 0x2ee <LCD_vdSendCom+0xf4>
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	62 e4       	ldi	r22, 0x42	; 66
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 260:	81 e4       	ldi	r24, 0x41	; 65
 262:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8ReadPort>
 266:	8f 70       	andi	r24, 0x0F	; 15
 268:	9c 2f       	mov	r25, r28
 26a:	90 7f       	andi	r25, 0xF0	; 240
 26c:	61 e4       	ldi	r22, 0x41	; 65
 26e:	89 2b       	or	r24, r25
 270:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 274:	41 e0       	ldi	r20, 0x01	; 1
 276:	62 e4       	ldi	r22, 0x42	; 66
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	62 e4       	ldi	r22, 0x42	; 66
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 288:	8f ec       	ldi	r24, 0xCF	; 207
 28a:	97 e0       	ldi	r25, 0x07	; 7
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <LCD_vdSendCom+0x92>
 290:	00 c0       	rjmp	.+0      	; 0x292 <LCD_vdSendCom+0x98>
 292:	00 00       	nop
 294:	40 e0       	ldi	r20, 0x00	; 0
 296:	62 e4       	ldi	r22, 0x42	; 66
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 29e:	8f ed       	ldi	r24, 0xDF	; 223
 2a0:	9e e2       	ldi	r25, 0x2E	; 46
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_vdSendCom+0xa8>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_vdSendCom+0xae>
 2a8:	00 00       	nop
 2aa:	81 e4       	ldi	r24, 0x41	; 65
 2ac:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8ReadPort>
 2b0:	8f 70       	andi	r24, 0x0F	; 15
 2b2:	90 e1       	ldi	r25, 0x10	; 16
 2b4:	c9 9f       	mul	r28, r25
 2b6:	90 01       	movw	r18, r0
 2b8:	11 24       	eor	r1, r1
 2ba:	61 e4       	ldi	r22, 0x41	; 65
 2bc:	82 2b       	or	r24, r18
 2be:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 2c2:	40 e0       	ldi	r20, 0x00	; 0
 2c4:	62 e4       	ldi	r22, 0x42	; 66
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 2cc:	8f ec       	ldi	r24, 0xCF	; 207
 2ce:	97 e0       	ldi	r25, 0x07	; 7
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <LCD_vdSendCom+0xd6>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <LCD_vdSendCom+0xdc>
 2d6:	00 00       	nop
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	62 e4       	ldi	r22, 0x42	; 66
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 2e2:	8f ed       	ldi	r24, 0xDF	; 223
 2e4:	9e e2       	ldi	r25, 0x2E	; 46
 2e6:	01 97       	sbiw	r24, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <LCD_vdSendCom+0xec>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <LCD_vdSendCom+0xf2>
 2ec:	00 00       	nop
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <LCD_vdInit>:
 2f2:	ef e3       	ldi	r30, 0x3F	; 63
 2f4:	fc e9       	ldi	r31, 0x9C	; 156
 2f6:	31 97       	sbiw	r30, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <LCD_vdInit+0x4>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <LCD_vdInit+0xa>
 2fc:	00 00       	nop
 2fe:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
 302:	88 23       	and	r24, r24
 304:	19 f0       	breq	.+6      	; 0x30c <LCD_vdInit+0x1a>
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	d1 f0       	breq	.+52     	; 0x33e <LCD_vdInit+0x4c>
 30a:	08 95       	ret
 30c:	80 e3       	ldi	r24, 0x30	; 48
 30e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 312:	88 e3       	ldi	r24, 0x38	; 56
 314:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 318:	8e e0       	ldi	r24, 0x0E	; 14
 31a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 31e:	86 e0       	ldi	r24, 0x06	; 6
 320:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 32a:	8f e9       	ldi	r24, 0x9F	; 159
 32c:	9f e0       	ldi	r25, 0x0F	; 15
 32e:	01 97       	sbiw	r24, 0x01	; 1
 330:	f1 f7       	brne	.-4      	; 0x32e <LCD_vdInit+0x3c>
 332:	00 c0       	rjmp	.+0      	; 0x334 <LCD_vdInit+0x42>
 334:	00 00       	nop
 336:	80 e8       	ldi	r24, 0x80	; 128
 338:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 33c:	08 95       	ret
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 344:	88 e2       	ldi	r24, 0x28	; 40
 346:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 34a:	8e e0       	ldi	r24, 0x0E	; 14
 34c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 350:	86 e0       	ldi	r24, 0x06	; 6
 352:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 35c:	ef e9       	ldi	r30, 0x9F	; 159
 35e:	ff e0       	ldi	r31, 0x0F	; 15
 360:	31 97       	sbiw	r30, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <LCD_vdInit+0x6e>
 364:	00 c0       	rjmp	.+0      	; 0x366 <LCD_vdInit+0x74>
 366:	00 00       	nop
 368:	80 e8       	ldi	r24, 0x80	; 128
 36a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
 36e:	08 95       	ret

00000370 <LCD_vdWriteChar>:
 370:	cf 93       	push	r28
 372:	c8 2f       	mov	r28, r24
 374:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__data_end>
 378:	99 23       	and	r25, r25
 37a:	19 f0       	breq	.+6      	; 0x382 <LCD_vdWriteChar+0x12>
 37c:	91 30       	cpi	r25, 0x01	; 1
 37e:	31 f1       	breq	.+76     	; 0x3cc <LCD_vdWriteChar+0x5c>
 380:	71 c0       	rjmp	.+226    	; 0x464 <__stack+0x5>
 382:	40 e0       	ldi	r20, 0x00	; 0
 384:	62 e4       	ldi	r22, 0x42	; 66
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 38c:	61 e4       	ldi	r22, 0x41	; 65
 38e:	8c 2f       	mov	r24, r28
 390:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	62 e4       	ldi	r22, 0x42	; 66
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	62 e4       	ldi	r22, 0x42	; 66
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 3a8:	8f ec       	ldi	r24, 0xCF	; 207
 3aa:	97 e0       	ldi	r25, 0x07	; 7
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <LCD_vdWriteChar+0x3c>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <LCD_vdWriteChar+0x42>
 3b2:	00 00       	nop
 3b4:	40 e0       	ldi	r20, 0x00	; 0
 3b6:	62 e4       	ldi	r22, 0x42	; 66
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 3be:	8f ec       	ldi	r24, 0xCF	; 207
 3c0:	97 e0       	ldi	r25, 0x07	; 7
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_vdWriteChar+0x52>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_vdWriteChar+0x58>
 3c8:	00 00       	nop
 3ca:	4c c0       	rjmp	.+152    	; 0x464 <__stack+0x5>
 3cc:	40 e0       	ldi	r20, 0x00	; 0
 3ce:	62 e4       	ldi	r22, 0x42	; 66
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 3d6:	81 e4       	ldi	r24, 0x41	; 65
 3d8:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8ReadPort>
 3dc:	8f 70       	andi	r24, 0x0F	; 15
 3de:	9c 2f       	mov	r25, r28
 3e0:	90 7f       	andi	r25, 0xF0	; 240
 3e2:	61 e4       	ldi	r22, 0x41	; 65
 3e4:	89 2b       	or	r24, r25
 3e6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 3ea:	41 e0       	ldi	r20, 0x01	; 1
 3ec:	62 e4       	ldi	r22, 0x42	; 66
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 3f4:	40 e0       	ldi	r20, 0x00	; 0
 3f6:	62 e4       	ldi	r22, 0x42	; 66
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 3fe:	8f ec       	ldi	r24, 0xCF	; 207
 400:	97 e0       	ldi	r25, 0x07	; 7
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__FUSE_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
 408:	00 00       	nop
 40a:	40 e0       	ldi	r20, 0x00	; 0
 40c:	62 e4       	ldi	r22, 0x42	; 66
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 414:	8f ec       	ldi	r24, 0xCF	; 207
 416:	97 e0       	ldi	r25, 0x07	; 7
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__FUSE_REGION_LENGTH__+0x18>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
 420:	40 e0       	ldi	r20, 0x00	; 0
 422:	62 e4       	ldi	r22, 0x42	; 66
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 42a:	81 e4       	ldi	r24, 0x41	; 65
 42c:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8ReadPort>
 430:	8f 70       	andi	r24, 0x0F	; 15
 432:	90 e1       	ldi	r25, 0x10	; 16
 434:	c9 9f       	mul	r28, r25
 436:	90 01       	movw	r18, r0
 438:	11 24       	eor	r1, r1
 43a:	61 e4       	ldi	r22, 0x41	; 65
 43c:	82 2b       	or	r24, r18
 43e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <DIO_vdWritePort>
 442:	8f ec       	ldi	r24, 0xCF	; 207
 444:	97 e0       	ldi	r25, 0x07	; 7
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__FUSE_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
 44e:	40 e0       	ldi	r20, 0x00	; 0
 450:	62 e4       	ldi	r22, 0x42	; 66
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_vdWritePin>
 458:	8f ec       	ldi	r24, 0xCF	; 207
 45a:	97 e0       	ldi	r25, 0x07	; 7
 45c:	01 97       	sbiw	r24, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <__FUSE_REGION_LENGTH__+0x5c>
 460:	00 c0       	rjmp	.+0      	; 0x462 <__stack+0x3>
 462:	00 00       	nop
 464:	cf 91       	pop	r28
 466:	08 95       	ret

00000468 <LCD_vdWriteCharPos>:

void LCD_vdWriteCharPos(unsigned char data,unsigned char row,unsigned char col){
 468:	cf 93       	push	r28
 46a:	c8 2f       	mov	r28, r24
		LCD_vdSendCom(row|col);	//set the cursor
 46c:	86 2f       	mov	r24, r22
 46e:	84 2b       	or	r24, r20
 470:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LCD_vdSendCom>
		LCD_vdWriteChar(data);
 474:	8c 2f       	mov	r24, r28
 476:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_vdWriteChar>
}
 47a:	cf 91       	pop	r28
 47c:	08 95       	ret

0000047e <LCD_vdWriteStringPos>:

void LCD_vdWriteStringPos(char *ptr,unsigned char row,unsigned char col)
{
 47e:	0f 93       	push	r16
 480:	1f 93       	push	r17
 482:	cf 93       	push	r28
 484:	df 93       	push	r29
 486:	ec 01       	movw	r28, r24
 488:	06 2f       	mov	r16, r22
	unsigned char temp = col;
	for (int i=0;ptr[i]!='\0';i++)
 48a:	88 81       	ld	r24, Y
 48c:	88 23       	and	r24, r24
 48e:	51 f0       	breq	.+20     	; 0x4a4 <LCD_vdWriteStringPos+0x26>
 490:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_vdWriteCharPos(ptr[i],row,temp++);
 492:	11 e0       	ldi	r17, 0x01	; 1
 494:	14 0f       	add	r17, r20
 496:	60 2f       	mov	r22, r16
 498:	0e 94 34 02 	call	0x468	; 0x468 <LCD_vdWriteCharPos>
}

void LCD_vdWriteStringPos(char *ptr,unsigned char row,unsigned char col)
{
	unsigned char temp = col;
	for (int i=0;ptr[i]!='\0';i++)
 49c:	89 91       	ld	r24, Y+
	{
		LCD_vdWriteCharPos(ptr[i],row,temp++);
 49e:	41 2f       	mov	r20, r17
}

void LCD_vdWriteStringPos(char *ptr,unsigned char row,unsigned char col)
{
	unsigned char temp = col;
	for (int i=0;ptr[i]!='\0';i++)
 4a0:	81 11       	cpse	r24, r1
 4a2:	f7 cf       	rjmp	.-18     	; 0x492 <LCD_vdWriteStringPos+0x14>
	{
		LCD_vdWriteCharPos(ptr[i],row,temp++);
	}
}
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	1f 91       	pop	r17
 4aa:	0f 91       	pop	r16
 4ac:	08 95       	ret

000004ae <APP_vdCall>:
#include "BTN.h"
#include "SPI.h"
#include <stdio.h>
#include <avr/io.h>  //for debugging

void APP_vdCall(unsigned char msg){
 4ae:	0f 93       	push	r16
 4b0:	1f 93       	push	r17
 4b2:	cf 93       	push	r28
 4b4:	df 93       	push	r29
 4b6:	00 d0       	rcall	.+0      	; 0x4b8 <APP_vdCall+0xa>
 4b8:	00 d0       	rcall	.+0      	; 0x4ba <APP_vdCall+0xc>
 4ba:	1f 92       	push	r1
 4bc:	cd b7       	in	r28, 0x3d	; 61
 4be:	de b7       	in	r29, 0x3e	; 62
	char buffer[5];
	
	sprintf(buffer,"%d",msg);
 4c0:	1f 92       	push	r1
 4c2:	8f 93       	push	r24
 4c4:	80 e6       	ldi	r24, 0x60	; 96
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	9f 93       	push	r25
 4ca:	8f 93       	push	r24
 4cc:	8e 01       	movw	r16, r28
 4ce:	0f 5f       	subi	r16, 0xFF	; 255
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	1f 93       	push	r17
 4d4:	0f 93       	push	r16
 4d6:	0e 94 d7 02 	call	0x5ae	; 0x5ae <sprintf>
	LCD_vdWriteStringPos(buffer,LCD_ROW_2,8);
 4da:	48 e0       	ldi	r20, 0x08	; 8
 4dc:	60 ec       	ldi	r22, 0xC0	; 192
 4de:	c8 01       	movw	r24, r16
 4e0:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_vdWriteStringPos>
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	0f 90       	pop	r0
 4ec:	0f 90       	pop	r0
 4ee:	0f 90       	pop	r0
}
 4f0:	0f 90       	pop	r0
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	0f 90       	pop	r0
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	1f 91       	pop	r17
 500:	0f 91       	pop	r16
 502:	08 95       	ret

00000504 <main>:

int main(void)
{
	/*initialization*/
    DIO_vdInit();
 504:	0e 94 49 00 	call	0x92	; 0x92 <DIO_vdInit>
    LCD_vdInit(MODE_4_BITS);
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <LCD_vdInit>
    SPI_vdInit(SLAVE,APP_vdCall);
 50e:	67 e5       	ldi	r22, 0x57	; 87
 510:	72 e0       	ldi	r23, 0x02	; 2
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	0e 94 93 02 	call	0x526	; 0x526 <SPI_vdInit>
	
	LCD_vdWriteStringPos("Button:",LCD_ROW_2,0);
 518:	40 e0       	ldi	r20, 0x00	; 0
 51a:	60 ec       	ldi	r22, 0xC0	; 192
 51c:	83 e6       	ldi	r24, 0x63	; 99
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_vdWriteStringPos>
	
    while (1) 
    {
    }
 524:	ff cf       	rjmp	.-2      	; 0x524 <main+0x20>

00000526 <SPI_vdInit>:
	while(!(SPSR & (1<<SPIF)));	/* Wait till reception complete */
	return(SPDR);			/* Return received data */
}

void SPI_vdSSenable(){
	PORTB &= ~(1<<SS);
 526:	70 93 6e 00 	sts	0x006E, r23	; 0x80006e <isr_func+0x1>
 52a:	60 93 6d 00 	sts	0x006D, r22	; 0x80006d <isr_func>
 52e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <mode>
 532:	88 23       	and	r24, r24
 534:	19 f0       	breq	.+6      	; 0x53c <SPI_vdInit+0x16>
 536:	81 30       	cpi	r24, 0x01	; 1
 538:	41 f0       	breq	.+16     	; 0x54a <SPI_vdInit+0x24>
 53a:	0f c0       	rjmp	.+30     	; 0x55a <SPI_vdInit+0x34>
 53c:	87 b3       	in	r24, 0x17	; 23
 53e:	80 6b       	ori	r24, 0xB0	; 176
 540:	87 bb       	out	0x17, r24	; 23
 542:	c4 9a       	sbi	0x18, 4	; 24
 544:	be 98       	cbi	0x17, 6	; 23
 546:	6c 9a       	sbi	0x0d, 4	; 13
 548:	08 c0       	rjmp	.+16     	; 0x55a <SPI_vdInit+0x34>
 54a:	6f 9a       	sbi	0x0d, 7	; 13
 54c:	8f b7       	in	r24, 0x3f	; 63
 54e:	80 68       	ori	r24, 0x80	; 128
 550:	8f bf       	out	0x3f, r24	; 63
 552:	be 9a       	sbi	0x17, 6	; 23
 554:	87 b3       	in	r24, 0x17	; 23
 556:	8f 74       	andi	r24, 0x4F	; 79
 558:	87 bb       	out	0x17, r24	; 23
 55a:	6e 9a       	sbi	0x0d, 6	; 13
 55c:	08 95       	ret

0000055e <__vector_10>:
}

ISR(SPI_STC_vect){
 55e:	1f 92       	push	r1
 560:	0f 92       	push	r0
 562:	0f b6       	in	r0, 0x3f	; 63
 564:	0f 92       	push	r0
 566:	11 24       	eor	r1, r1
 568:	2f 93       	push	r18
 56a:	3f 93       	push	r19
 56c:	4f 93       	push	r20
 56e:	5f 93       	push	r21
 570:	6f 93       	push	r22
 572:	7f 93       	push	r23
 574:	8f 93       	push	r24
 576:	9f 93       	push	r25
 578:	af 93       	push	r26
 57a:	bf 93       	push	r27
 57c:	ef 93       	push	r30
 57e:	ff 93       	push	r31
	isr_func(SPDR);	
 580:	8f b1       	in	r24, 0x0f	; 15
 582:	e0 91 6d 00 	lds	r30, 0x006D	; 0x80006d <isr_func>
 586:	f0 91 6e 00 	lds	r31, 0x006E	; 0x80006e <isr_func+0x1>
 58a:	09 95       	icall
 58c:	ff 91       	pop	r31
 58e:	ef 91       	pop	r30
 590:	bf 91       	pop	r27
 592:	af 91       	pop	r26
 594:	9f 91       	pop	r25
 596:	8f 91       	pop	r24
 598:	7f 91       	pop	r23
 59a:	6f 91       	pop	r22
 59c:	5f 91       	pop	r21
 59e:	4f 91       	pop	r20
 5a0:	3f 91       	pop	r19
 5a2:	2f 91       	pop	r18
 5a4:	0f 90       	pop	r0
 5a6:	0f be       	out	0x3f, r0	; 63
 5a8:	0f 90       	pop	r0
 5aa:	1f 90       	pop	r1
 5ac:	18 95       	reti

000005ae <sprintf>:
 5ae:	ae e0       	ldi	r26, 0x0E	; 14
 5b0:	b0 e0       	ldi	r27, 0x00	; 0
 5b2:	ed ed       	ldi	r30, 0xDD	; 221
 5b4:	f2 e0       	ldi	r31, 0x02	; 2
 5b6:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__prologue_saves__+0x1c>
 5ba:	0d 89       	ldd	r16, Y+21	; 0x15
 5bc:	1e 89       	ldd	r17, Y+22	; 0x16
 5be:	86 e0       	ldi	r24, 0x06	; 6
 5c0:	8c 83       	std	Y+4, r24	; 0x04
 5c2:	1a 83       	std	Y+2, r17	; 0x02
 5c4:	09 83       	std	Y+1, r16	; 0x01
 5c6:	8f ef       	ldi	r24, 0xFF	; 255
 5c8:	9f e7       	ldi	r25, 0x7F	; 127
 5ca:	9e 83       	std	Y+6, r25	; 0x06
 5cc:	8d 83       	std	Y+5, r24	; 0x05
 5ce:	ae 01       	movw	r20, r28
 5d0:	47 5e       	subi	r20, 0xE7	; 231
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	6f 89       	ldd	r22, Y+23	; 0x17
 5d6:	78 8d       	ldd	r23, Y+24	; 0x18
 5d8:	ce 01       	movw	r24, r28
 5da:	01 96       	adiw	r24, 0x01	; 1
 5dc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <vfprintf>
 5e0:	2f 81       	ldd	r18, Y+7	; 0x07
 5e2:	38 85       	ldd	r19, Y+8	; 0x08
 5e4:	f8 01       	movw	r30, r16
 5e6:	e2 0f       	add	r30, r18
 5e8:	f3 1f       	adc	r31, r19
 5ea:	10 82       	st	Z, r1
 5ec:	2e 96       	adiw	r28, 0x0e	; 14
 5ee:	e4 e0       	ldi	r30, 0x04	; 4
 5f0:	0c 94 a2 05 	jmp	0xb44	; 0xb44 <__epilogue_restores__+0x1c>

000005f4 <vfprintf>:
 5f4:	ac e0       	ldi	r26, 0x0C	; 12
 5f6:	b0 e0       	ldi	r27, 0x00	; 0
 5f8:	e0 e0       	ldi	r30, 0x00	; 0
 5fa:	f3 e0       	ldi	r31, 0x03	; 3
 5fc:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <__prologue_saves__>
 600:	7c 01       	movw	r14, r24
 602:	6b 01       	movw	r12, r22
 604:	8a 01       	movw	r16, r20
 606:	fc 01       	movw	r30, r24
 608:	17 82       	std	Z+7, r1	; 0x07
 60a:	16 82       	std	Z+6, r1	; 0x06
 60c:	83 81       	ldd	r24, Z+3	; 0x03
 60e:	81 ff       	sbrs	r24, 1
 610:	bd c1       	rjmp	.+890    	; 0x98c <vfprintf+0x398>
 612:	ce 01       	movw	r24, r28
 614:	01 96       	adiw	r24, 0x01	; 1
 616:	4c 01       	movw	r8, r24
 618:	f7 01       	movw	r30, r14
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	f6 01       	movw	r30, r12
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	6f 01       	movw	r12, r30
 628:	88 23       	and	r24, r24
 62a:	09 f4       	brne	.+2      	; 0x62e <vfprintf+0x3a>
 62c:	ab c1       	rjmp	.+854    	; 0x984 <vfprintf+0x390>
 62e:	85 32       	cpi	r24, 0x25	; 37
 630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0x4c>
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	6f 01       	movw	r12, r30
 63c:	85 32       	cpi	r24, 0x25	; 37
 63e:	29 f4       	brne	.+10     	; 0x64a <vfprintf+0x56>
 640:	b7 01       	movw	r22, r14
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 648:	e7 cf       	rjmp	.-50     	; 0x618 <vfprintf+0x24>
 64a:	51 2c       	mov	r5, r1
 64c:	31 2c       	mov	r3, r1
 64e:	20 e0       	ldi	r18, 0x00	; 0
 650:	20 32       	cpi	r18, 0x20	; 32
 652:	a0 f4       	brcc	.+40     	; 0x67c <vfprintf+0x88>
 654:	8b 32       	cpi	r24, 0x2B	; 43
 656:	69 f0       	breq	.+26     	; 0x672 <vfprintf+0x7e>
 658:	30 f4       	brcc	.+12     	; 0x666 <vfprintf+0x72>
 65a:	80 32       	cpi	r24, 0x20	; 32
 65c:	59 f0       	breq	.+22     	; 0x674 <vfprintf+0x80>
 65e:	83 32       	cpi	r24, 0x23	; 35
 660:	69 f4       	brne	.+26     	; 0x67c <vfprintf+0x88>
 662:	20 61       	ori	r18, 0x10	; 16
 664:	2c c0       	rjmp	.+88     	; 0x6be <vfprintf+0xca>
 666:	8d 32       	cpi	r24, 0x2D	; 45
 668:	39 f0       	breq	.+14     	; 0x678 <vfprintf+0x84>
 66a:	80 33       	cpi	r24, 0x30	; 48
 66c:	39 f4       	brne	.+14     	; 0x67c <vfprintf+0x88>
 66e:	21 60       	ori	r18, 0x01	; 1
 670:	26 c0       	rjmp	.+76     	; 0x6be <vfprintf+0xca>
 672:	22 60       	ori	r18, 0x02	; 2
 674:	24 60       	ori	r18, 0x04	; 4
 676:	23 c0       	rjmp	.+70     	; 0x6be <vfprintf+0xca>
 678:	28 60       	ori	r18, 0x08	; 8
 67a:	21 c0       	rjmp	.+66     	; 0x6be <vfprintf+0xca>
 67c:	27 fd       	sbrc	r18, 7
 67e:	27 c0       	rjmp	.+78     	; 0x6ce <vfprintf+0xda>
 680:	30 ed       	ldi	r19, 0xD0	; 208
 682:	38 0f       	add	r19, r24
 684:	3a 30       	cpi	r19, 0x0A	; 10
 686:	78 f4       	brcc	.+30     	; 0x6a6 <vfprintf+0xb2>
 688:	26 ff       	sbrs	r18, 6
 68a:	06 c0       	rjmp	.+12     	; 0x698 <vfprintf+0xa4>
 68c:	fa e0       	ldi	r31, 0x0A	; 10
 68e:	5f 9e       	mul	r5, r31
 690:	30 0d       	add	r19, r0
 692:	11 24       	eor	r1, r1
 694:	53 2e       	mov	r5, r19
 696:	13 c0       	rjmp	.+38     	; 0x6be <vfprintf+0xca>
 698:	8a e0       	ldi	r24, 0x0A	; 10
 69a:	38 9e       	mul	r3, r24
 69c:	30 0d       	add	r19, r0
 69e:	11 24       	eor	r1, r1
 6a0:	33 2e       	mov	r3, r19
 6a2:	20 62       	ori	r18, 0x20	; 32
 6a4:	0c c0       	rjmp	.+24     	; 0x6be <vfprintf+0xca>
 6a6:	8e 32       	cpi	r24, 0x2E	; 46
 6a8:	21 f4       	brne	.+8      	; 0x6b2 <vfprintf+0xbe>
 6aa:	26 fd       	sbrc	r18, 6
 6ac:	6b c1       	rjmp	.+726    	; 0x984 <vfprintf+0x390>
 6ae:	20 64       	ori	r18, 0x40	; 64
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <vfprintf+0xca>
 6b2:	8c 36       	cpi	r24, 0x6C	; 108
 6b4:	11 f4       	brne	.+4      	; 0x6ba <vfprintf+0xc6>
 6b6:	20 68       	ori	r18, 0x80	; 128
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <vfprintf+0xca>
 6ba:	88 36       	cpi	r24, 0x68	; 104
 6bc:	41 f4       	brne	.+16     	; 0x6ce <vfprintf+0xda>
 6be:	f6 01       	movw	r30, r12
 6c0:	93 fd       	sbrc	r25, 3
 6c2:	85 91       	lpm	r24, Z+
 6c4:	93 ff       	sbrs	r25, 3
 6c6:	81 91       	ld	r24, Z+
 6c8:	6f 01       	movw	r12, r30
 6ca:	81 11       	cpse	r24, r1
 6cc:	c1 cf       	rjmp	.-126    	; 0x650 <vfprintf+0x5c>
 6ce:	98 2f       	mov	r25, r24
 6d0:	9f 7d       	andi	r25, 0xDF	; 223
 6d2:	95 54       	subi	r25, 0x45	; 69
 6d4:	93 30       	cpi	r25, 0x03	; 3
 6d6:	28 f4       	brcc	.+10     	; 0x6e2 <vfprintf+0xee>
 6d8:	0c 5f       	subi	r16, 0xFC	; 252
 6da:	1f 4f       	sbci	r17, 0xFF	; 255
 6dc:	ff e3       	ldi	r31, 0x3F	; 63
 6de:	f9 83       	std	Y+1, r31	; 0x01
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <vfprintf+0x108>
 6e2:	83 36       	cpi	r24, 0x63	; 99
 6e4:	31 f0       	breq	.+12     	; 0x6f2 <vfprintf+0xfe>
 6e6:	83 37       	cpi	r24, 0x73	; 115
 6e8:	71 f0       	breq	.+28     	; 0x706 <vfprintf+0x112>
 6ea:	83 35       	cpi	r24, 0x53	; 83
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <vfprintf+0xfc>
 6ee:	5b c0       	rjmp	.+182    	; 0x7a6 <vfprintf+0x1b2>
 6f0:	22 c0       	rjmp	.+68     	; 0x736 <vfprintf+0x142>
 6f2:	f8 01       	movw	r30, r16
 6f4:	80 81       	ld	r24, Z
 6f6:	89 83       	std	Y+1, r24	; 0x01
 6f8:	0e 5f       	subi	r16, 0xFE	; 254
 6fa:	1f 4f       	sbci	r17, 0xFF	; 255
 6fc:	44 24       	eor	r4, r4
 6fe:	43 94       	inc	r4
 700:	51 2c       	mov	r5, r1
 702:	54 01       	movw	r10, r8
 704:	15 c0       	rjmp	.+42     	; 0x730 <vfprintf+0x13c>
 706:	38 01       	movw	r6, r16
 708:	f2 e0       	ldi	r31, 0x02	; 2
 70a:	6f 0e       	add	r6, r31
 70c:	71 1c       	adc	r7, r1
 70e:	f8 01       	movw	r30, r16
 710:	a0 80       	ld	r10, Z
 712:	b1 80       	ldd	r11, Z+1	; 0x01
 714:	26 ff       	sbrs	r18, 6
 716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x12a>
 718:	65 2d       	mov	r22, r5
 71a:	70 e0       	ldi	r23, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <vfprintf+0x12e>
 71e:	6f ef       	ldi	r22, 0xFF	; 255
 720:	7f ef       	ldi	r23, 0xFF	; 255
 722:	c5 01       	movw	r24, r10
 724:	2c 87       	std	Y+12, r18	; 0x0c
 726:	0e 94 d7 04 	call	0x9ae	; 0x9ae <strnlen>
 72a:	2c 01       	movw	r4, r24
 72c:	83 01       	movw	r16, r6
 72e:	2c 85       	ldd	r18, Y+12	; 0x0c
 730:	2f 77       	andi	r18, 0x7F	; 127
 732:	22 2e       	mov	r2, r18
 734:	17 c0       	rjmp	.+46     	; 0x764 <vfprintf+0x170>
 736:	38 01       	movw	r6, r16
 738:	f2 e0       	ldi	r31, 0x02	; 2
 73a:	6f 0e       	add	r6, r31
 73c:	71 1c       	adc	r7, r1
 73e:	f8 01       	movw	r30, r16
 740:	a0 80       	ld	r10, Z
 742:	b1 80       	ldd	r11, Z+1	; 0x01
 744:	26 ff       	sbrs	r18, 6
 746:	03 c0       	rjmp	.+6      	; 0x74e <vfprintf+0x15a>
 748:	65 2d       	mov	r22, r5
 74a:	70 e0       	ldi	r23, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x15e>
 74e:	6f ef       	ldi	r22, 0xFF	; 255
 750:	7f ef       	ldi	r23, 0xFF	; 255
 752:	c5 01       	movw	r24, r10
 754:	2c 87       	std	Y+12, r18	; 0x0c
 756:	0e 94 cc 04 	call	0x998	; 0x998 <strnlen_P>
 75a:	2c 01       	movw	r4, r24
 75c:	2c 85       	ldd	r18, Y+12	; 0x0c
 75e:	20 68       	ori	r18, 0x80	; 128
 760:	22 2e       	mov	r2, r18
 762:	83 01       	movw	r16, r6
 764:	23 fc       	sbrc	r2, 3
 766:	1b c0       	rjmp	.+54     	; 0x79e <vfprintf+0x1aa>
 768:	83 2d       	mov	r24, r3
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	48 16       	cp	r4, r24
 76e:	59 06       	cpc	r5, r25
 770:	b0 f4       	brcc	.+44     	; 0x79e <vfprintf+0x1aa>
 772:	b7 01       	movw	r22, r14
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 77c:	3a 94       	dec	r3
 77e:	f4 cf       	rjmp	.-24     	; 0x768 <vfprintf+0x174>
 780:	f5 01       	movw	r30, r10
 782:	27 fc       	sbrc	r2, 7
 784:	85 91       	lpm	r24, Z+
 786:	27 fe       	sbrs	r2, 7
 788:	81 91       	ld	r24, Z+
 78a:	5f 01       	movw	r10, r30
 78c:	b7 01       	movw	r22, r14
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 794:	31 10       	cpse	r3, r1
 796:	3a 94       	dec	r3
 798:	f1 e0       	ldi	r31, 0x01	; 1
 79a:	4f 1a       	sub	r4, r31
 79c:	51 08       	sbc	r5, r1
 79e:	41 14       	cp	r4, r1
 7a0:	51 04       	cpc	r5, r1
 7a2:	71 f7       	brne	.-36     	; 0x780 <vfprintf+0x18c>
 7a4:	e5 c0       	rjmp	.+458    	; 0x970 <vfprintf+0x37c>
 7a6:	84 36       	cpi	r24, 0x64	; 100
 7a8:	11 f0       	breq	.+4      	; 0x7ae <vfprintf+0x1ba>
 7aa:	89 36       	cpi	r24, 0x69	; 105
 7ac:	39 f5       	brne	.+78     	; 0x7fc <vfprintf+0x208>
 7ae:	f8 01       	movw	r30, r16
 7b0:	27 ff       	sbrs	r18, 7
 7b2:	07 c0       	rjmp	.+14     	; 0x7c2 <vfprintf+0x1ce>
 7b4:	60 81       	ld	r22, Z
 7b6:	71 81       	ldd	r23, Z+1	; 0x01
 7b8:	82 81       	ldd	r24, Z+2	; 0x02
 7ba:	93 81       	ldd	r25, Z+3	; 0x03
 7bc:	0c 5f       	subi	r16, 0xFC	; 252
 7be:	1f 4f       	sbci	r17, 0xFF	; 255
 7c0:	08 c0       	rjmp	.+16     	; 0x7d2 <vfprintf+0x1de>
 7c2:	60 81       	ld	r22, Z
 7c4:	71 81       	ldd	r23, Z+1	; 0x01
 7c6:	07 2e       	mov	r0, r23
 7c8:	00 0c       	add	r0, r0
 7ca:	88 0b       	sbc	r24, r24
 7cc:	99 0b       	sbc	r25, r25
 7ce:	0e 5f       	subi	r16, 0xFE	; 254
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	2f 76       	andi	r18, 0x6F	; 111
 7d4:	72 2e       	mov	r7, r18
 7d6:	97 ff       	sbrs	r25, 7
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <vfprintf+0x1f8>
 7da:	90 95       	com	r25
 7dc:	80 95       	com	r24
 7de:	70 95       	com	r23
 7e0:	61 95       	neg	r22
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	20 68       	ori	r18, 0x80	; 128
 7ea:	72 2e       	mov	r7, r18
 7ec:	2a e0       	ldi	r18, 0x0A	; 10
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	a4 01       	movw	r20, r8
 7f2:	0e 94 1a 05 	call	0xa34	; 0xa34 <__ultoa_invert>
 7f6:	a8 2e       	mov	r10, r24
 7f8:	a8 18       	sub	r10, r8
 7fa:	44 c0       	rjmp	.+136    	; 0x884 <vfprintf+0x290>
 7fc:	85 37       	cpi	r24, 0x75	; 117
 7fe:	29 f4       	brne	.+10     	; 0x80a <vfprintf+0x216>
 800:	2f 7e       	andi	r18, 0xEF	; 239
 802:	b2 2e       	mov	r11, r18
 804:	2a e0       	ldi	r18, 0x0A	; 10
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	25 c0       	rjmp	.+74     	; 0x854 <vfprintf+0x260>
 80a:	f2 2f       	mov	r31, r18
 80c:	f9 7f       	andi	r31, 0xF9	; 249
 80e:	bf 2e       	mov	r11, r31
 810:	8f 36       	cpi	r24, 0x6F	; 111
 812:	c1 f0       	breq	.+48     	; 0x844 <vfprintf+0x250>
 814:	18 f4       	brcc	.+6      	; 0x81c <vfprintf+0x228>
 816:	88 35       	cpi	r24, 0x58	; 88
 818:	79 f0       	breq	.+30     	; 0x838 <vfprintf+0x244>
 81a:	b4 c0       	rjmp	.+360    	; 0x984 <vfprintf+0x390>
 81c:	80 37       	cpi	r24, 0x70	; 112
 81e:	19 f0       	breq	.+6      	; 0x826 <vfprintf+0x232>
 820:	88 37       	cpi	r24, 0x78	; 120
 822:	21 f0       	breq	.+8      	; 0x82c <vfprintf+0x238>
 824:	af c0       	rjmp	.+350    	; 0x984 <vfprintf+0x390>
 826:	2f 2f       	mov	r18, r31
 828:	20 61       	ori	r18, 0x10	; 16
 82a:	b2 2e       	mov	r11, r18
 82c:	b4 fe       	sbrs	r11, 4
 82e:	0d c0       	rjmp	.+26     	; 0x84a <vfprintf+0x256>
 830:	8b 2d       	mov	r24, r11
 832:	84 60       	ori	r24, 0x04	; 4
 834:	b8 2e       	mov	r11, r24
 836:	09 c0       	rjmp	.+18     	; 0x84a <vfprintf+0x256>
 838:	24 ff       	sbrs	r18, 4
 83a:	0a c0       	rjmp	.+20     	; 0x850 <vfprintf+0x25c>
 83c:	9f 2f       	mov	r25, r31
 83e:	96 60       	ori	r25, 0x06	; 6
 840:	b9 2e       	mov	r11, r25
 842:	06 c0       	rjmp	.+12     	; 0x850 <vfprintf+0x25c>
 844:	28 e0       	ldi	r18, 0x08	; 8
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	05 c0       	rjmp	.+10     	; 0x854 <vfprintf+0x260>
 84a:	20 e1       	ldi	r18, 0x10	; 16
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0x260>
 850:	20 e1       	ldi	r18, 0x10	; 16
 852:	32 e0       	ldi	r19, 0x02	; 2
 854:	f8 01       	movw	r30, r16
 856:	b7 fe       	sbrs	r11, 7
 858:	07 c0       	rjmp	.+14     	; 0x868 <vfprintf+0x274>
 85a:	60 81       	ld	r22, Z
 85c:	71 81       	ldd	r23, Z+1	; 0x01
 85e:	82 81       	ldd	r24, Z+2	; 0x02
 860:	93 81       	ldd	r25, Z+3	; 0x03
 862:	0c 5f       	subi	r16, 0xFC	; 252
 864:	1f 4f       	sbci	r17, 0xFF	; 255
 866:	06 c0       	rjmp	.+12     	; 0x874 <vfprintf+0x280>
 868:	60 81       	ld	r22, Z
 86a:	71 81       	ldd	r23, Z+1	; 0x01
 86c:	80 e0       	ldi	r24, 0x00	; 0
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	0e 5f       	subi	r16, 0xFE	; 254
 872:	1f 4f       	sbci	r17, 0xFF	; 255
 874:	a4 01       	movw	r20, r8
 876:	0e 94 1a 05 	call	0xa34	; 0xa34 <__ultoa_invert>
 87a:	a8 2e       	mov	r10, r24
 87c:	a8 18       	sub	r10, r8
 87e:	fb 2d       	mov	r31, r11
 880:	ff 77       	andi	r31, 0x7F	; 127
 882:	7f 2e       	mov	r7, r31
 884:	76 fe       	sbrs	r7, 6
 886:	0b c0       	rjmp	.+22     	; 0x89e <vfprintf+0x2aa>
 888:	37 2d       	mov	r19, r7
 88a:	3e 7f       	andi	r19, 0xFE	; 254
 88c:	a5 14       	cp	r10, r5
 88e:	50 f4       	brcc	.+20     	; 0x8a4 <vfprintf+0x2b0>
 890:	74 fe       	sbrs	r7, 4
 892:	0a c0       	rjmp	.+20     	; 0x8a8 <vfprintf+0x2b4>
 894:	72 fc       	sbrc	r7, 2
 896:	08 c0       	rjmp	.+16     	; 0x8a8 <vfprintf+0x2b4>
 898:	37 2d       	mov	r19, r7
 89a:	3e 7e       	andi	r19, 0xEE	; 238
 89c:	05 c0       	rjmp	.+10     	; 0x8a8 <vfprintf+0x2b4>
 89e:	ba 2c       	mov	r11, r10
 8a0:	37 2d       	mov	r19, r7
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <vfprintf+0x2b6>
 8a4:	ba 2c       	mov	r11, r10
 8a6:	01 c0       	rjmp	.+2      	; 0x8aa <vfprintf+0x2b6>
 8a8:	b5 2c       	mov	r11, r5
 8aa:	34 ff       	sbrs	r19, 4
 8ac:	0d c0       	rjmp	.+26     	; 0x8c8 <vfprintf+0x2d4>
 8ae:	fe 01       	movw	r30, r28
 8b0:	ea 0d       	add	r30, r10
 8b2:	f1 1d       	adc	r31, r1
 8b4:	80 81       	ld	r24, Z
 8b6:	80 33       	cpi	r24, 0x30	; 48
 8b8:	11 f4       	brne	.+4      	; 0x8be <vfprintf+0x2ca>
 8ba:	39 7e       	andi	r19, 0xE9	; 233
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <vfprintf+0x2dc>
 8be:	32 ff       	sbrs	r19, 2
 8c0:	06 c0       	rjmp	.+12     	; 0x8ce <vfprintf+0x2da>
 8c2:	b3 94       	inc	r11
 8c4:	b3 94       	inc	r11
 8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <vfprintf+0x2dc>
 8c8:	83 2f       	mov	r24, r19
 8ca:	86 78       	andi	r24, 0x86	; 134
 8cc:	09 f0       	breq	.+2      	; 0x8d0 <vfprintf+0x2dc>
 8ce:	b3 94       	inc	r11
 8d0:	33 fd       	sbrc	r19, 3
 8d2:	13 c0       	rjmp	.+38     	; 0x8fa <vfprintf+0x306>
 8d4:	30 ff       	sbrs	r19, 0
 8d6:	06 c0       	rjmp	.+12     	; 0x8e4 <vfprintf+0x2f0>
 8d8:	5a 2c       	mov	r5, r10
 8da:	b3 14       	cp	r11, r3
 8dc:	18 f4       	brcc	.+6      	; 0x8e4 <vfprintf+0x2f0>
 8de:	53 0c       	add	r5, r3
 8e0:	5b 18       	sub	r5, r11
 8e2:	b3 2c       	mov	r11, r3
 8e4:	b3 14       	cp	r11, r3
 8e6:	68 f4       	brcc	.+26     	; 0x902 <vfprintf+0x30e>
 8e8:	b7 01       	movw	r22, r14
 8ea:	80 e2       	ldi	r24, 0x20	; 32
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	3c 87       	std	Y+12, r19	; 0x0c
 8f0:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 8f4:	b3 94       	inc	r11
 8f6:	3c 85       	ldd	r19, Y+12	; 0x0c
 8f8:	f5 cf       	rjmp	.-22     	; 0x8e4 <vfprintf+0x2f0>
 8fa:	b3 14       	cp	r11, r3
 8fc:	10 f4       	brcc	.+4      	; 0x902 <vfprintf+0x30e>
 8fe:	3b 18       	sub	r3, r11
 900:	01 c0       	rjmp	.+2      	; 0x904 <vfprintf+0x310>
 902:	31 2c       	mov	r3, r1
 904:	34 ff       	sbrs	r19, 4
 906:	12 c0       	rjmp	.+36     	; 0x92c <vfprintf+0x338>
 908:	b7 01       	movw	r22, r14
 90a:	80 e3       	ldi	r24, 0x30	; 48
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	3c 87       	std	Y+12, r19	; 0x0c
 910:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 914:	3c 85       	ldd	r19, Y+12	; 0x0c
 916:	32 ff       	sbrs	r19, 2
 918:	17 c0       	rjmp	.+46     	; 0x948 <vfprintf+0x354>
 91a:	31 fd       	sbrc	r19, 1
 91c:	03 c0       	rjmp	.+6      	; 0x924 <vfprintf+0x330>
 91e:	88 e7       	ldi	r24, 0x78	; 120
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	02 c0       	rjmp	.+4      	; 0x928 <vfprintf+0x334>
 924:	88 e5       	ldi	r24, 0x58	; 88
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	b7 01       	movw	r22, r14
 92a:	0c c0       	rjmp	.+24     	; 0x944 <vfprintf+0x350>
 92c:	83 2f       	mov	r24, r19
 92e:	86 78       	andi	r24, 0x86	; 134
 930:	59 f0       	breq	.+22     	; 0x948 <vfprintf+0x354>
 932:	31 ff       	sbrs	r19, 1
 934:	02 c0       	rjmp	.+4      	; 0x93a <vfprintf+0x346>
 936:	8b e2       	ldi	r24, 0x2B	; 43
 938:	01 c0       	rjmp	.+2      	; 0x93c <vfprintf+0x348>
 93a:	80 e2       	ldi	r24, 0x20	; 32
 93c:	37 fd       	sbrc	r19, 7
 93e:	8d e2       	ldi	r24, 0x2D	; 45
 940:	b7 01       	movw	r22, r14
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 948:	a5 14       	cp	r10, r5
 94a:	38 f4       	brcc	.+14     	; 0x95a <vfprintf+0x366>
 94c:	b7 01       	movw	r22, r14
 94e:	80 e3       	ldi	r24, 0x30	; 48
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 956:	5a 94       	dec	r5
 958:	f7 cf       	rjmp	.-18     	; 0x948 <vfprintf+0x354>
 95a:	aa 94       	dec	r10
 95c:	f4 01       	movw	r30, r8
 95e:	ea 0d       	add	r30, r10
 960:	f1 1d       	adc	r31, r1
 962:	80 81       	ld	r24, Z
 964:	b7 01       	movw	r22, r14
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 96c:	a1 10       	cpse	r10, r1
 96e:	f5 cf       	rjmp	.-22     	; 0x95a <vfprintf+0x366>
 970:	33 20       	and	r3, r3
 972:	09 f4       	brne	.+2      	; 0x976 <vfprintf+0x382>
 974:	51 ce       	rjmp	.-862    	; 0x618 <vfprintf+0x24>
 976:	b7 01       	movw	r22, r14
 978:	80 e2       	ldi	r24, 0x20	; 32
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <fputc>
 980:	3a 94       	dec	r3
 982:	f6 cf       	rjmp	.-20     	; 0x970 <vfprintf+0x37c>
 984:	f7 01       	movw	r30, r14
 986:	86 81       	ldd	r24, Z+6	; 0x06
 988:	97 81       	ldd	r25, Z+7	; 0x07
 98a:	02 c0       	rjmp	.+4      	; 0x990 <vfprintf+0x39c>
 98c:	8f ef       	ldi	r24, 0xFF	; 255
 98e:	9f ef       	ldi	r25, 0xFF	; 255
 990:	2c 96       	adiw	r28, 0x0c	; 12
 992:	e2 e1       	ldi	r30, 0x12	; 18
 994:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__epilogue_restores__>

00000998 <strnlen_P>:
 998:	fc 01       	movw	r30, r24
 99a:	05 90       	lpm	r0, Z+
 99c:	61 50       	subi	r22, 0x01	; 1
 99e:	70 40       	sbci	r23, 0x00	; 0
 9a0:	01 10       	cpse	r0, r1
 9a2:	d8 f7       	brcc	.-10     	; 0x99a <strnlen_P+0x2>
 9a4:	80 95       	com	r24
 9a6:	90 95       	com	r25
 9a8:	8e 0f       	add	r24, r30
 9aa:	9f 1f       	adc	r25, r31
 9ac:	08 95       	ret

000009ae <strnlen>:
 9ae:	fc 01       	movw	r30, r24
 9b0:	61 50       	subi	r22, 0x01	; 1
 9b2:	70 40       	sbci	r23, 0x00	; 0
 9b4:	01 90       	ld	r0, Z+
 9b6:	01 10       	cpse	r0, r1
 9b8:	d8 f7       	brcc	.-10     	; 0x9b0 <strnlen+0x2>
 9ba:	80 95       	com	r24
 9bc:	90 95       	com	r25
 9be:	8e 0f       	add	r24, r30
 9c0:	9f 1f       	adc	r25, r31
 9c2:	08 95       	ret

000009c4 <fputc>:
 9c4:	0f 93       	push	r16
 9c6:	1f 93       	push	r17
 9c8:	cf 93       	push	r28
 9ca:	df 93       	push	r29
 9cc:	fb 01       	movw	r30, r22
 9ce:	23 81       	ldd	r18, Z+3	; 0x03
 9d0:	21 fd       	sbrc	r18, 1
 9d2:	03 c0       	rjmp	.+6      	; 0x9da <fputc+0x16>
 9d4:	8f ef       	ldi	r24, 0xFF	; 255
 9d6:	9f ef       	ldi	r25, 0xFF	; 255
 9d8:	28 c0       	rjmp	.+80     	; 0xa2a <fputc+0x66>
 9da:	22 ff       	sbrs	r18, 2
 9dc:	16 c0       	rjmp	.+44     	; 0xa0a <fputc+0x46>
 9de:	46 81       	ldd	r20, Z+6	; 0x06
 9e0:	57 81       	ldd	r21, Z+7	; 0x07
 9e2:	24 81       	ldd	r18, Z+4	; 0x04
 9e4:	35 81       	ldd	r19, Z+5	; 0x05
 9e6:	42 17       	cp	r20, r18
 9e8:	53 07       	cpc	r21, r19
 9ea:	44 f4       	brge	.+16     	; 0x9fc <fputc+0x38>
 9ec:	a0 81       	ld	r26, Z
 9ee:	b1 81       	ldd	r27, Z+1	; 0x01
 9f0:	9d 01       	movw	r18, r26
 9f2:	2f 5f       	subi	r18, 0xFF	; 255
 9f4:	3f 4f       	sbci	r19, 0xFF	; 255
 9f6:	31 83       	std	Z+1, r19	; 0x01
 9f8:	20 83       	st	Z, r18
 9fa:	8c 93       	st	X, r24
 9fc:	26 81       	ldd	r18, Z+6	; 0x06
 9fe:	37 81       	ldd	r19, Z+7	; 0x07
 a00:	2f 5f       	subi	r18, 0xFF	; 255
 a02:	3f 4f       	sbci	r19, 0xFF	; 255
 a04:	37 83       	std	Z+7, r19	; 0x07
 a06:	26 83       	std	Z+6, r18	; 0x06
 a08:	10 c0       	rjmp	.+32     	; 0xa2a <fputc+0x66>
 a0a:	eb 01       	movw	r28, r22
 a0c:	09 2f       	mov	r16, r25
 a0e:	18 2f       	mov	r17, r24
 a10:	00 84       	ldd	r0, Z+8	; 0x08
 a12:	f1 85       	ldd	r31, Z+9	; 0x09
 a14:	e0 2d       	mov	r30, r0
 a16:	09 95       	icall
 a18:	89 2b       	or	r24, r25
 a1a:	e1 f6       	brne	.-72     	; 0x9d4 <fputc+0x10>
 a1c:	8e 81       	ldd	r24, Y+6	; 0x06
 a1e:	9f 81       	ldd	r25, Y+7	; 0x07
 a20:	01 96       	adiw	r24, 0x01	; 1
 a22:	9f 83       	std	Y+7, r25	; 0x07
 a24:	8e 83       	std	Y+6, r24	; 0x06
 a26:	81 2f       	mov	r24, r17
 a28:	90 2f       	mov	r25, r16
 a2a:	df 91       	pop	r29
 a2c:	cf 91       	pop	r28
 a2e:	1f 91       	pop	r17
 a30:	0f 91       	pop	r16
 a32:	08 95       	ret

00000a34 <__ultoa_invert>:
 a34:	fa 01       	movw	r30, r20
 a36:	aa 27       	eor	r26, r26
 a38:	28 30       	cpi	r18, 0x08	; 8
 a3a:	51 f1       	breq	.+84     	; 0xa90 <__ultoa_invert+0x5c>
 a3c:	20 31       	cpi	r18, 0x10	; 16
 a3e:	81 f1       	breq	.+96     	; 0xaa0 <__ultoa_invert+0x6c>
 a40:	e8 94       	clt
 a42:	6f 93       	push	r22
 a44:	6e 7f       	andi	r22, 0xFE	; 254
 a46:	6e 5f       	subi	r22, 0xFE	; 254
 a48:	7f 4f       	sbci	r23, 0xFF	; 255
 a4a:	8f 4f       	sbci	r24, 0xFF	; 255
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	af 4f       	sbci	r26, 0xFF	; 255
 a50:	b1 e0       	ldi	r27, 0x01	; 1
 a52:	3e d0       	rcall	.+124    	; 0xad0 <__ultoa_invert+0x9c>
 a54:	b4 e0       	ldi	r27, 0x04	; 4
 a56:	3c d0       	rcall	.+120    	; 0xad0 <__ultoa_invert+0x9c>
 a58:	67 0f       	add	r22, r23
 a5a:	78 1f       	adc	r23, r24
 a5c:	89 1f       	adc	r24, r25
 a5e:	9a 1f       	adc	r25, r26
 a60:	a1 1d       	adc	r26, r1
 a62:	68 0f       	add	r22, r24
 a64:	79 1f       	adc	r23, r25
 a66:	8a 1f       	adc	r24, r26
 a68:	91 1d       	adc	r25, r1
 a6a:	a1 1d       	adc	r26, r1
 a6c:	6a 0f       	add	r22, r26
 a6e:	71 1d       	adc	r23, r1
 a70:	81 1d       	adc	r24, r1
 a72:	91 1d       	adc	r25, r1
 a74:	a1 1d       	adc	r26, r1
 a76:	20 d0       	rcall	.+64     	; 0xab8 <__ultoa_invert+0x84>
 a78:	09 f4       	brne	.+2      	; 0xa7c <__ultoa_invert+0x48>
 a7a:	68 94       	set
 a7c:	3f 91       	pop	r19
 a7e:	2a e0       	ldi	r18, 0x0A	; 10
 a80:	26 9f       	mul	r18, r22
 a82:	11 24       	eor	r1, r1
 a84:	30 19       	sub	r19, r0
 a86:	30 5d       	subi	r19, 0xD0	; 208
 a88:	31 93       	st	Z+, r19
 a8a:	de f6       	brtc	.-74     	; 0xa42 <__ultoa_invert+0xe>
 a8c:	cf 01       	movw	r24, r30
 a8e:	08 95       	ret
 a90:	46 2f       	mov	r20, r22
 a92:	47 70       	andi	r20, 0x07	; 7
 a94:	40 5d       	subi	r20, 0xD0	; 208
 a96:	41 93       	st	Z+, r20
 a98:	b3 e0       	ldi	r27, 0x03	; 3
 a9a:	0f d0       	rcall	.+30     	; 0xaba <__ultoa_invert+0x86>
 a9c:	c9 f7       	brne	.-14     	; 0xa90 <__ultoa_invert+0x5c>
 a9e:	f6 cf       	rjmp	.-20     	; 0xa8c <__ultoa_invert+0x58>
 aa0:	46 2f       	mov	r20, r22
 aa2:	4f 70       	andi	r20, 0x0F	; 15
 aa4:	40 5d       	subi	r20, 0xD0	; 208
 aa6:	4a 33       	cpi	r20, 0x3A	; 58
 aa8:	18 f0       	brcs	.+6      	; 0xab0 <__ultoa_invert+0x7c>
 aaa:	49 5d       	subi	r20, 0xD9	; 217
 aac:	31 fd       	sbrc	r19, 1
 aae:	40 52       	subi	r20, 0x20	; 32
 ab0:	41 93       	st	Z+, r20
 ab2:	02 d0       	rcall	.+4      	; 0xab8 <__ultoa_invert+0x84>
 ab4:	a9 f7       	brne	.-22     	; 0xaa0 <__ultoa_invert+0x6c>
 ab6:	ea cf       	rjmp	.-44     	; 0xa8c <__ultoa_invert+0x58>
 ab8:	b4 e0       	ldi	r27, 0x04	; 4
 aba:	a6 95       	lsr	r26
 abc:	97 95       	ror	r25
 abe:	87 95       	ror	r24
 ac0:	77 95       	ror	r23
 ac2:	67 95       	ror	r22
 ac4:	ba 95       	dec	r27
 ac6:	c9 f7       	brne	.-14     	; 0xaba <__ultoa_invert+0x86>
 ac8:	00 97       	sbiw	r24, 0x00	; 0
 aca:	61 05       	cpc	r22, r1
 acc:	71 05       	cpc	r23, r1
 ace:	08 95       	ret
 ad0:	9b 01       	movw	r18, r22
 ad2:	ac 01       	movw	r20, r24
 ad4:	0a 2e       	mov	r0, r26
 ad6:	06 94       	lsr	r0
 ad8:	57 95       	ror	r21
 ada:	47 95       	ror	r20
 adc:	37 95       	ror	r19
 ade:	27 95       	ror	r18
 ae0:	ba 95       	dec	r27
 ae2:	c9 f7       	brne	.-14     	; 0xad6 <__ultoa_invert+0xa2>
 ae4:	62 0f       	add	r22, r18
 ae6:	73 1f       	adc	r23, r19
 ae8:	84 1f       	adc	r24, r20
 aea:	95 1f       	adc	r25, r21
 aec:	a0 1d       	adc	r26, r0
 aee:	08 95       	ret

00000af0 <__prologue_saves__>:
 af0:	2f 92       	push	r2
 af2:	3f 92       	push	r3
 af4:	4f 92       	push	r4
 af6:	5f 92       	push	r5
 af8:	6f 92       	push	r6
 afa:	7f 92       	push	r7
 afc:	8f 92       	push	r8
 afe:	9f 92       	push	r9
 b00:	af 92       	push	r10
 b02:	bf 92       	push	r11
 b04:	cf 92       	push	r12
 b06:	df 92       	push	r13
 b08:	ef 92       	push	r14
 b0a:	ff 92       	push	r15
 b0c:	0f 93       	push	r16
 b0e:	1f 93       	push	r17
 b10:	cf 93       	push	r28
 b12:	df 93       	push	r29
 b14:	cd b7       	in	r28, 0x3d	; 61
 b16:	de b7       	in	r29, 0x3e	; 62
 b18:	ca 1b       	sub	r28, r26
 b1a:	db 0b       	sbc	r29, r27
 b1c:	0f b6       	in	r0, 0x3f	; 63
 b1e:	f8 94       	cli
 b20:	de bf       	out	0x3e, r29	; 62
 b22:	0f be       	out	0x3f, r0	; 63
 b24:	cd bf       	out	0x3d, r28	; 61
 b26:	09 94       	ijmp

00000b28 <__epilogue_restores__>:
 b28:	2a 88       	ldd	r2, Y+18	; 0x12
 b2a:	39 88       	ldd	r3, Y+17	; 0x11
 b2c:	48 88       	ldd	r4, Y+16	; 0x10
 b2e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b30:	6e 84       	ldd	r6, Y+14	; 0x0e
 b32:	7d 84       	ldd	r7, Y+13	; 0x0d
 b34:	8c 84       	ldd	r8, Y+12	; 0x0c
 b36:	9b 84       	ldd	r9, Y+11	; 0x0b
 b38:	aa 84       	ldd	r10, Y+10	; 0x0a
 b3a:	b9 84       	ldd	r11, Y+9	; 0x09
 b3c:	c8 84       	ldd	r12, Y+8	; 0x08
 b3e:	df 80       	ldd	r13, Y+7	; 0x07
 b40:	ee 80       	ldd	r14, Y+6	; 0x06
 b42:	fd 80       	ldd	r15, Y+5	; 0x05
 b44:	0c 81       	ldd	r16, Y+4	; 0x04
 b46:	1b 81       	ldd	r17, Y+3	; 0x03
 b48:	aa 81       	ldd	r26, Y+2	; 0x02
 b4a:	b9 81       	ldd	r27, Y+1	; 0x01
 b4c:	ce 0f       	add	r28, r30
 b4e:	d1 1d       	adc	r29, r1
 b50:	0f b6       	in	r0, 0x3f	; 63
 b52:	f8 94       	cli
 b54:	de bf       	out	0x3e, r29	; 62
 b56:	0f be       	out	0x3f, r0	; 63
 b58:	cd bf       	out	0x3d, r28	; 61
 b5a:	ed 01       	movw	r28, r26
 b5c:	08 95       	ret

00000b5e <_exit>:
 b5e:	f8 94       	cli

00000b60 <__stop_program>:
 b60:	ff cf       	rjmp	.-2      	; 0xb60 <__stop_program>
